//
//  pattern #        type        cycles  loads  observe_proc  capture_proc  capture_clock_sequence                                       
//  ---------  ----------------  ------  -----  ------------  ------------  ----------------------                                       
//        0    basic                1      0         -             -        [-]                                                          
//        1    clock_sequential     2      0         -             -        [mc_rb_ef1_sclk_i] [-]                                       
//        2    clock_sequential     4      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-] 
//        3    clock_sequential     2      0         -             -        [mc_rb_ef1_sclk_i] [-]                                       
//        4    clock_sequential     4      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-] 
//        5    clock_sequential     4      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-] 
//        6    clock_sequential     4      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-] 
//        7    clock_sequential     4      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-] 
//        8    clock_sequential     3      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-]                    
//        9    clock_sequential     4      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-] 
//       10    clock_sequential     3      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-]                    
//       11    clock_sequential     4      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-] 
//       12    clock_sequential     4      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-] 
//       13    clock_sequential     3      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-]                    
//       14    clock_sequential     4      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-] 
//       15    clock_sequential     3      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-]                    
//       16    clock_sequential     3      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-]                    
//       17    clock_sequential     4      0         -             -        [-] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] 
//       18    clock_sequential     3      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-]                    
//       19    clock_sequential     3      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-]                    
//       20    clock_sequential     4      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-] 
//       21    clock_sequential     3      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-]                    
//       22    clock_sequential     4      0         -             -        [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [mc_rb_ef1_sclk_i] [-] 
//       23    clock_sequential     2      0         -             -        [mc_rb_ef1_sclk_i] [-]                                       
//       24    clock_sequential     2      0         -             -        [mc_rb_ef1_sclk_i] [-]                                       
//       25    clock_sequential     2      0         -             -        [mc_rb_ef1_sclk_i] [-]                                       
//       26    clock_sequential     2      0         -             -        [mc_rb_ef1_sclk_i] [-]                                       
//
